@inject Microsoft.Extensions.Localization.IStringLocalizer<DeleteCustomerFromTable> _localizer
<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.Delete" Class="mr-3 mb-n1" />
            @_localizer["Edit Customer"]
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudTextField Label=@_localizer["First Name"] HelperText=@_localizer["Max. 8 characters"]
                              @bind-Value="NewCustomerDebts.Item1.FirstName" For="@(() => 
                                           NewCustomerDebts.Item1.FirstName)"/>
        <MudTextField Label=@_localizer["Last Name"] HelperText=@_localizer["Max. 8 characters"]
                              @bind-Value="NewCustomerDebts.Item1.LastName" For="@(() => 
                                           NewCustomerDebts.Item1.LastName)"/>
        <MudTextField Label=@_localizer["PhoneNumber"] HelperText=@_localizer["Exactly 10 characters"]
                              @bind-Value="NewCustomerDebts.Item1.PhoneNumber" For="@(() => 
                                           NewCustomerDebts.Item1.PhoneNumber)"/>
        <MudTextField Label=@_localizer["Action"] HelperText=@_localizer["Pais/Store/Winner"]
                              @bind-Value="NewCustomerDebts.Item2.Action" For="@(() => NewCustomerDebts.Item2.Action)"/>
        <MudTextField Label=@_localizer["Action Amount"] 
                              @bind-Value="NewCustomerDebts.Item2.ActionAmount" For="@(() => NewCustomerDebts.Item2.ActionAmount)"/>
        <MudTextField Label=@_localizer["Comments"]
                              @bind-Value="NewCustomerDebts.Item2.Comments" For="@(() => NewCustomerDebts.Item2.Comments)"/>

    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">@_localizer["Cancel"]</MudButton>
        <MudButton Color="Color.Info" Variant="Variant.Filled" OnClick="Submit">@_localizer["Confirm"]</MudButton>
    </DialogActions>
</MudDialog>
@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter] public Tuple<Customer, CustomerDebts> NewCustomerDebts { get; set; }

    void Submit()
    {
        if (InputOfEditCustomerFormIsValidated())
        {
            NewCustomerDebts.Item2.ActionDate = DateTime.UtcNow.ToLocalTime();
            var existingDebt = NewCustomerDebts.Item1.CustomerDebts.FindLast(x => x.CustomerDebtsId == NewCustomerDebts.Item2.CustomerDebtsId);
            NewCustomerDebts.Item1.CustomerDebts.Remove(existingDebt);
            NewCustomerDebts.Item1.CustomerDebts.Add(NewCustomerDebts.Item2);
            MudDialog.Close(DialogResult.Ok(NewCustomerDebts.Item1));
        }
    }
    void Cancel() => MudDialog.Cancel();

    private bool InputOfEditCustomerFormIsValidated()
    {
        if (string.IsNullOrEmpty(NewCustomerDebts.Item1.FirstName))
        {
            _snackBar.Add(_localizer["FirstName can't be empty"], Severity.Error);
            return false;
        }

        if (string.IsNullOrEmpty(NewCustomerDebts.Item1.LastName))
        {
            _snackBar.Add(_localizer["LastName can't be empty"]);
            return false;
        }

        if (string.IsNullOrEmpty(NewCustomerDebts.Item1.PhoneNumber))
        {
            _snackBar.Add(_localizer["PhoneNumber can't be empty"]);
            return false;
        }

        return true;
    }
}